name: Deploy to -a (old)

on:
  workflow_dispatch:
    inputs:
      env:
        default: "dev"
        description: "Environment"
        required: true
        type: environment

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: >-
      ${{
        github.event_name == 'workflow_dispatch' ||
        github.event.workflow_run.conclusion == 'success'
      }}
    environment: ${{ github.event.inputs.env || 'dev' }}
    concurrency: ${{ github.event.inputs.env || 'dev' }}
    env:
      TARGET: ${{ github.event.inputs.env || 'dev' }}

    steps:
      - uses: actions/checkout@v2
      - uses: mbta/actions/build-push-ecr@v1
        id: build-push
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          docker-repo: ${{ secrets.DOCKER_REPO }}
      - uses: mbta/actions/deploy-ecs@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ecs-cluster: alerts-concierge
          ecs-service: alerts-concierge-${{ env.TARGET }}-a
          ecs-task-definition: alerts-concierge-${{ env.TARGET }}
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
      - uses: mbta/actions/notify-slack-deploy@v1
        if: ${{ !cancelled() }}
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          job-status: ${{ job.status }}
